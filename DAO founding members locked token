WITH vesting_periods AS (
  SELECT
    t1.account,
    t1.amount,
    CAST(t1.numsteps AS bigint) AS numsteps,
    DATE(from_unixtime(CAST(t2.startTime AS DOUBLE))) AS start_time,
    DATE(from_unixtime(CAST(t2.endTime AS DOUBLE))) AS end_time,
    FLOOR((CAST(t2.endTime AS DOUBLE) - CAST(t2.startTime AS DOUBLE)) / 86400) AS days_diff  -- 86400 seconds in a day
  FROM
    autonolas_ethereum.buOLAS_call_createLockFor AS t1
  JOIN
    autonolas_ethereum.buOLAS_evt_Lock AS t2 ON t1.account = t2.account
),
vesting_schedule AS (
  SELECT
    account,
    amount,
    numsteps,
    start_time,
    DATE_ADD('DAY', CAST((days_diff / numsteps) AS bigint) * se.seq, start_time) AS vesting_date,
    (amount / numsteps) / POW(10,18) AS amount_vested_at_this_point
  FROM
    vesting_periods
  CROSS JOIN
    UNNEST(sequence(1, numsteps)) AS se(seq)
),
buOLAS_data AS (
  SELECT
    account,
    SUM(CASE WHEN vesting_date <= CURRENT_DATE THEN amount_vested_at_this_point ELSE 0 END) AS vested_buOLAS,
    SUM(CASE WHEN vesting_date > CURRENT_DATE THEN amount_vested_at_this_point ELSE 0 END) AS unvested_buOLAS
  FROM
    vesting_schedule
  GROUP BY
    account
),
veOLAS_data AS (
  SELECT 
    account,
    amount / pow(10,18) AS amount,  -- Convert amount to a readable format
    from_unixtime(CAST(locktime AS DOUBLE)) AS unlock_date
  FROM 
    autonolas_ethereum.veOLAS_evt_Deposit
),
veOLAS_aggregated AS (
  SELECT
    account,
    SUM(CASE WHEN unlock_date <= CURRENT_DATE THEN amount ELSE 0 END) AS vested_veOLAS,
    SUM(CASE WHEN unlock_date > CURRENT_DATE THEN amount ELSE 0 END) AS unvested_veOLAS
  FROM
    veOLAS_data
  GROUP BY
    account
),
olas_transferred AS (
  SELECT
    "from" AS account,
    SUM(value) / POW(10, 18) AS total_transferred  
  FROM
    erc20_ethereum.evt_Transfer
  WHERE
    contract_address = 0x0001A500A6B18995B03f44bb040A5fFc28E45CB0
    And to != 0x7e01A500805f8A52Fad229b3015AD130A332B7b3
  GROUP BY
    "from"
)
SELECT
  COALESCE(a.account, b.account, c.account) AS account,
  COALESCE(a.vested_buOLAS, 0) AS unlocked_buOLAS,
  COALESCE(a.unvested_buOLAS, 0) AS locked_buOLAS,
  COALESCE(b.vested_veOLAS, 0) AS unlocked_veOLAS,
  COALESCE(b.unvested_veOLAS, 0) AS locked_veOLAS,
  COALESCE(a.vested_buOLAS, 0) + COALESCE(b.vested_veOLAS, 0) AS total_unlocked,
  COALESCE(a.unvested_buOLAS, 0) + COALESCE(b.unvested_veOLAS, 0) AS total_locked,
  COALESCE(c.total_transferred, 0) AS olas_transferred_out,
  CASE 
    WHEN (COALESCE(a.vested_buOLAS, 0) + COALESCE(b.vested_veOLAS, 0)) > 0 
    THEN COALESCE(c.total_transferred, 0) / (COALESCE(a.vested_buOLAS, 0) + COALESCE(b.vested_veOLAS, 0)) * 100 
    ELSE 0 
  END AS percent_vested_transferred_out
FROM
  buOLAS_data a
FULL OUTER JOIN
  veOLAS_aggregated b ON a.account = b.account
LEFT JOIN
  olas_transferred c ON COALESCE(a.account, b.account) = c.account
WHERE
  COALESCE(a.account, b.account, c.account) IN (
    0x034e4879DCB495cf57Bf52cdCa0b3b4d0E55E8EE,
    0x037ED7Ee9E5D1bA2f6fdb3fb84Bf0c8B5FC664Da,
    0x0690Fb332956e6915A0e1Fd060FbDE9cFD58e450,
    0x0AD36be9438f357920B44A3a6f278dB62925942D,
    0x0DA89e0023d7553CeB208C57ade43bc6E423dEF3,
    0x0ED3CE49B196c6113FE96611e0D3bBa2632E1515,
    0x0b6D0a414bc61A8f312f055669851edFb1764CE0,
    0x10124BDa2119db4802905a889c0D46A0c4af26eA,
    0x1801292A0fE7C321ae9aD96EAdA8f735E79EF123,
    0x19A9886Cd98EE4dDB3fA719fd686cE1C906d32ba,
    0x1c3eC146c3738367EeF9b1A77CF6174a8606e7c9,
    0x1e550B93a628Dc2bD7f6A592f23867241e562AeE,
    0x1f68B6521d5E01747BF1E4A2672a2AC35D03e864,
    0x23944C1a1E53aBeaDc733f9C89e4C7ECf9C09d82,
    0x284dc764e16A3b2a102a5Db963d3A8b478Ba4D8A,
    0x2F70A60047A6e3590bCC1d099700fDBE6F058Ba6,
    0x2ef34590Da6ce113b8F2fa441fb8D4B8c2d57aA0,
    0x34471096285C2B59164E20c03f6977423a450039,
    0x3479Bf87C62D26B54943FADf3deB9826050f1de6,
    0x35B56618Aad07Af51A3Fb4b80cAFEC6B1175B886,
    0x372787643043Cef01D82BA912A528aB217eB75F3,
    0x3931a0FC4ed17D4d9cf5923867A9c154539A777B,
    0x3CbF118f7b4171607318A94c06175D9DEe6aa7D8,
    0x40b8122b68B017CBBbfd939035ed31453f0554a3,
    0x414DA4DbC1a4271452CB779f1A01d6Ba5f36Bee1,
    0x492444430659EC9Ed63B2Bc04a6b23ea55d359d5,
    0x511Fc9127a867148026623190661e5b7094d6f03,
    0x5394d136AD3138C75400aEDE434679536CAEce01,
    0x556Da213E4b298a1A2AA36315a9b7c682D8B5582,
    0x55F2d65834c1f7216AC68c36a47b447338F44809,
    0x5dB711AF1C9246a39A638edeB161096bbC29D6Bd,
    0x61BA5d32e909EdC4F891068d4d00f5091Cfc5f73,
    0x6245306aC27bC4aAE274D4A0e153dF569B9c259F,
    0x67f7eC602acf3536FFb37a87565B5155317ad08A,
    0x6E5c073F0354381009B12aA047F7c701B5c3FBD1,
    0x6EA40178d5CDa12E8cde749f480eEDb71238B69f,
    0x6b3292cE116c207Be086F2278F136c8c9f958250,
    0x77Cf3c1Cf8a204B4C73678770F2D1D71673D479a,
    0x7864e82089bDdE0E4fAc8C8E43747bfc8def7D5f,
    0x81f7C5CEe392D7B95E7ff8B2A583116D7608d3A0,
    0x82835406CD17d08C62204C6C892372Aa91f1C898,
    0x8410373DF6E9b20765c9599c26d585B2cd0Ef628,
    0x87Fc90fe3DA6f44e0293bF5E29e421bdCd8Db1d6,
    0x88F2d53c50c58484b0898a2184aEe94EcDeb4cC5,
    0x8c7f0D6538be2bFC3C9337a8BeadC3c8380cFf67,
    0x91283Bf247dbd017748540c2BF61cB5F40D5440C,
    0x92f0c3c8D1b48061409D04aC39F0D297471F4e8e,
    0x937F5b32Bc3cafcd1B02462F93e6AE5a843f6C6A,
    0x98fDaB66F92D64C97F96ab0306c468BB9a3c2685,
    0xA93eC5916a119390aDB8C4c244f926d14916F4e9,
    0xAA6C1791A92bFB69EF9862AfddD67FC715FD6Af1,
    0xAD2Ac85Cd8c7870ee19C9be7fC5A83d6F2Cb1B28,
    0xB1325846a5A4DC31BAF4F20E8E5F126E5c06555B,
    0xB295d05f055EE3309A498C58153DfBC5E83F829B,
    0xBAa1e99c34621e2159abEd00CC673CE1e219e0F4,
    0xBC21Ef6D6F4eB68d53a2917E575E67E6A9889716,
    0xBbF4baD1d0220Cd03af7B9A789410E7b3B1E94A6,
    0xCECEA7C32e899846414C88dF7Abfc99fE3678a83,
    0xD5237AbfE2d34B8F7C56D3cBA2527028A4AD47cb,
    0xD7f0dDcBb0117A53e9ff2cad814B8B810a314f59,
    0xE373a19084753bc4746a05fba80D10534eDE2c10,
    0xEb2661955bdA65F07DF7Fc9b378fbDc160456DA8,
    0xF89b6D66e3089e27C0fF7F07a865b1F2FF8392De,
    0xFA1a1D97329C0b5CcD072f3AFCdd64f25306f425,
    0xFB8F150dBE6587322F307da49A5647BDE12Cd063,
    0xFb752162a2EfFd235130dF67d5094E6ECB5f2891,
    0xb5F079841E001f973174C636F8bf00EeFfbd2374,
    0xbB55F1C03d72BECBDE5Cb866344ECa6E17E83E1f,
    0xbee03a45b37abF4639A5bf84E3B22C8c6167fA6b,
    0xbf200e03D1Cf9DAc14EC6D7B486Bf609c8BBef5e,
    0xc1e98604046C726a5Ac4605f56447E87EFe9c08B,
    0xc2D79ad529680763368fA52784f385A379EBeB22,
    0xcbAF750E27a6EFA40f4B98CeA00203c1bC92f662,
    0xd31C30Fda0BCaaEEb5A0a4db67052Dca2919b735,
    0xe016ec54349E1Fdc09C86878F25760ED317a7911,
    0xe2A96Ea79DF01363a435cEA7BEd895c55C12A25B
  )
ORDER BY
  COALESCE(a.account, b.account, c.account)
